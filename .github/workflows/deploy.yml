name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

env:
  applicationfolder: /home/runner/work/build/build


jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          java-package: jdk

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: save secret to file
        working-directory: ${{ env.applicationfolder }}/target
        run: | 
             printf "%s" "$SSH_PRIVATE_KEY" > private-key.pem
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: save known host to file
        working-directory: ${{ env.applicationfolder }}/target
        run: | 
             printf "%s" "$KNOWN_HOSTS" > known_hosts
        env:
            KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}

      - name: make private key private
        working-directory: ${{ env.applicationfolder }}/target
        run: | 
             chmod 400 private-key.pem

      - name: scp
        working-directory: ${{ env.applicationfolder }}/target
        run: scp -i private-key.pem -o UserKnownHostsFile=known_hosts -o HashKnownHosts=yes *.war ubuntu@${{ secrets.EC2_INSTANCE }}:/var/lib/jetty9/webapps
